[tox]
minversion = 3.18.0
envlist = py3,docs,pep8
ignore_basepython_conflict=true

[testenv]
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
    PYTHONWARNINGS=default::DeprecationWarning
deps =
    -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
commands = stestr run --slowest {posargs}
passenv =
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY

[testenv:pep8]
deps =
    Pygments>=2.2.0 # BSD license
    doc8>=0.8.1 # Apache-2.0
    flake8-import-order>=0.17.1 # LGPLv3
    hacking~=6.0.0 # Apache-2.0
    pycodestyle>=2.0.0,<3.0.0 # MIT
commands =
    flake8 {posargs}
    doc8 doc/source releasenotes/source README.rst CONTRIBUTING.rst HACKING.rst

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:docs]
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
  -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:pdf-docs]
allowlist_externals = make
deps = {[testenv:docs]deps}
commands =
    sphinx-build -W -b latex doc/source doc/build/pdf
    make -C doc/build/pdf

[testenv:debug]
commands = oslo_debug_helper -t bifrost/tests {posargs}

[testenv:releasenotes]
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
  -r{toxinidir}/doc/requirements.txt
commands =
    sphinx-build -a -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:debug-py36]
basepython = python3.6
commands = oslo_debug_helper -t bifrost/tests {posargs}

[flake8]
show-source = True
# [H301] one import per line (commonly violated in ansible modules)
ignore = F403,H102,H301,H303,W504
# [H106] Don't put vim configuration in source files.
enable-extensions=H106
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,os_ironic.py,os_ironic_node.py,os_ironic_inspect.py,os_keystone_service.py
import-order-style = pep8
application-import-names = bifrost
filename = *.py

[testenv:linters]
allowlist_externals = bash
deps =
  ansible>=8,<9
  ansible-lint>=6,<7
commands =
    bash tools/ansible-lint.sh

[testenv:codespell]
description =
  Run codespell to check spelling
deps = codespell
# note(JayF): {posargs} lets us run `tox -ecodespell -- -w` to get codespell
#             to correct spelling issues in our code it's aware of.
commands =
  codespell {posargs}