---
# git_root is the folder where to place downloaded git repos
git_root: "/opt/stack"
# *_git_url can be overridden by local clones for offline installs
git_url_root: https://opendev.org
dib_git_url: "{{ git_url_root }}/openstack/diskimage-builder"
ironicclient_git_url: "{{ git_url_root }}/openstack/python-ironicclient"
openstacksdk_git_url: "{{ git_url_root }}/openstack/openstacksdk"
ironic_git_url: "{{ git_url_root }}/openstack/ironic"
ironicinspector_git_url: "{{ git_url_root }}/openstack/ironic-inspector"
ironicinspectorclient_git_url: "{{ git_url_root }}/openstack/python-ironic-inspector-client"
reqs_git_url: "{{ git_url_root }}/openstack/requirements"
staging_drivers_git_url: "{{ git_url_root }}/x/ironic-staging-drivers"
keystone_git_url: "{{ git_url_root }}/openstack/keystone"
sushy_git_url: "{{ git_url_root }}/openstack/sushy"
ipa_git_url: "{{ git_url_root }}/openstack/ironic-python-agent"
ipa_builder_git_url: "{{ git_url_root }}/openstack/ironic-python-agent-builder"
prometheus_exporter_git_url: "{{ git_url_root }}/openstack/ironic-prometheus-exporter"
# *_git_folder can be overridden by local clones for offline installs
ironicclient_git_folder: "{{ git_root}}/python-ironicclient"
ironic_git_folder: "{{ git_root}}/ironic"
ironicinspector_git_folder: "{{ git_root}}/ironic-inspector"
ironicinspectorclient_git_folder: "{{ git_root}}/python-ironic-inspector-client"
openstacksdk_git_folder: "{{ git_root}}/openstacksdk"
dib_git_folder: "{{ git_root }}/diskimage-builder"
reqs_git_folder: "{{ git_root }}/requirements"
staging_drivers_git_folder: "{{ git_root }}/ironic-staging-drivers"
keystone_git_folder: "{{ git_root}}/keystone"
sushy_git_folder: "{{ git_root}}/sushy"
ipa_git_folder: "{{ git_root}}/ironic-python-agent"
ipa_builder_git_folder: "{{ git_root}}/ironic-python-agent-builder"
prometheus_exporter_git_folder: "{{ git_root}}/ironic-prometheus-exporter"
# *git_branch can be overridden for stable branch testing
git_branch: unmaintained/zed
ironicclient_git_branch: "{{ git_branch }}"
ironic_git_branch: "{{ git_branch }}"
openstacksdk_git_branch: "{{ git_branch }}"
dib_git_branch: master
ironicinspector_git_branch: "{{ git_branch }}"
ironicinspectorclient_git_branch: "{{ git_branch }}"
reqs_git_branch: "{{ git_branch }}"
staging_drivers_git_branch: "{{ git_branch }}"
keystone_git_branch: "{{ git_branch }}"
sushy_git_branch: "{{ git_branch }}"
ipa_git_branch: "{{ git_branch }}"
ipa_builder_git_branch: "{{ git_branch }}"
prometheus_exporter_git_branch: "{{ git_branch }}"
# disable source install to prevent cloning
ironicclient_source_install: false
openstacksdk_source_install: false
ironicinspector_source_install: true
ironicinspectorclient_source_install: false
sushy_source_install: false
staging_drivers_source_install: true
prometheus_exporter_source_install: true
enable_inspector: true
enable_keystone: false
enable_prometheus_exporter: false
staging_drivers_include: false

update_repos: true
force_update_repos: true

# Conditional variables utilized based on CI or manual testing options.
copy_from_local_path: false

bifrost_install_sources:
  - git_folder: "{{ ironic_git_folder }}"
    git_url: "{{ ironic_git_url }}"
    git_branch: "{{ ironic_git_branch }}"
    name: ironic
  - git_folder: "{{ ironicclient_git_folder }}"
    git_url: "{{ ironicclient_git_url }}"
    git_branch: "{{ ironicclient_git_branch }}"
    name: ironicclient
    source_install: "{{ ironicclient_source_install }}"
  - git_folder: "{{ openstacksdk_git_folder }}"
    git_url: "{{ openstacksdk_git_url }}"
    git_branch: "{{ openstacksdk_git_branch }}"
    name: openstacksdk
    source_install: "{{ openstacksdk_source_install }}"
  - git_folder: "{{ dib_git_folder }}"
    git_url: "{{ dib_git_url }}"
    git_branch: "{{ dib_git_branch }}"
    name: dib
  - git_folder: "{{ ironicinspector_git_folder }}"
    git_url: "{{ ironicinspector_git_url }}"
    git_branch: "{{ ironicinspector_git_branch }}"
    name: ironicinspector
    source_install: "{{ ironicinspector_source_install }}"
    enabled: "{{ enable_inspector }}"
  - git_folder: "{{ ironicinspectorclient_git_folder }}"
    git_url: "{{ ironicinspectorclient_git_url }}"
    git_branch: "{{ ironicinspectorclient_git_branch }}"
    name: ironicinspectorclient
    source_install: "{{ ironicinspectorclient_source_install }}"
    enabled: "{{ enable_inspector }}"
  - git_folder: "{{ reqs_git_folder }}"
    git_url: "{{ reqs_git_url }}"
    git_branch: "{{ reqs_git_branch }}"
    name: requirements
  - git_folder: "{{ staging_drivers_git_folder }}"
    git_url: "{{ staging_drivers_git_url }}"
    git_branch: "{{ staging_drivers_git_branch }}"
    name: ironic-staging-drivers
    source_install: "{{ staging_drivers_source_install }}"
    enabled: "{{ staging_drivers_include }}"
  - git_folder: "{{ keystone_git_folder }}"
    git_url: "{{ keystone_git_url }}"
    git_branch: "{{ keystone_git_branch }}"
    name: keystone
    enabled: "{{ enable_keystone }}"
  - git_folder: "{{ sushy_git_folder }}"
    git_url: "{{ sushy_git_url }}"
    git_branch: "{{ sushy_git_branch }}"
    name: sushy
    source_install: "{{ sushy_source_install }}"
  - git_folder: "{{ ipa_git_folder }}"
    git_url: "{{ ipa_git_url }}"
    git_branch: "{{ ipa_git_branch }}"
    name: ironic-python-agent
  - git_folder: "{{ ipa_builder_git_folder }}"
    git_url: "{{ ipa_builder_git_url }}"
    git_branch: "{{ ipa_builder_git_branch }}"
    name: ironic-python-agent-builder
  - git_folder: "{{ prometheus_exporter_git_folder }}"
    git_url: "{{ prometheus_exporter_git_url }}"
    git_branch: "{{ prometheus_exporter_git_branch }}"
    name: ironic-prometheus-exporter
    source_install: "{{ prometheus_exporter_source_install }}"
    enabled: "{{ enable_prometheus_exporter }}"

# Ensure that Ansible is using python interpreter and dependencies inside the bifrost virtual environment
bifrost_venv_dir: "{{ lookup('env', 'VENV') or '/opt/stack/bifrost' }}"
ansible_python_interpreter: "{{ bifrost_venv_dir + '/bin/python3' }}"
upper_constraints_file: >-
  {{ lookup('env', 'UPPER_CONSTRAINTS_FILE')
     | default(lookup('env', 'TOX_CONSTRAINTS_FILE'), True)
     | default(reqs_git_folder + '/upper-constraints.txt', True) }}
